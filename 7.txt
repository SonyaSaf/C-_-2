#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

vector<int> obedinenie(const vector<int>& arr1, const vector<int>& arr2) {
    vector<int> result;
    merge(arr1.begin(), arr1.end(), arr2.begin(), arr2.end(), back_inserter(result));
    return result;
}

vector<int> peresech(const vector<int>& arr1, const vector<int>& arr2) {
    vector<int> result;
    set_intersection(arr1.begin(), arr1.end(), arr2.begin(), arr2.end(), back_inserter(result));
    return result;
}

vector<int> raznost(const vector<int>& arr1, const vector<int>& arr2) {
    vector<int> result;
    set_symmetric_difference(arr1.begin(), arr1.end(), arr2.begin(), arr2.end(), back_inserter(result));
    return result;
}

int main() {
    vector<int> arr1 = { 1, 3, 5, 7, 9 };
    vector<int> arr2 = { 5, 7, 8, 9, 10 };

    vector<int> obedinenieResult = obedinenie(arr1, arr2);
    cout << "Объединение: ";
    for (int num : obedinenieResult) {
        cout << num << " ";
    }
    cout << endl;

    vector<int> peresechResult = peresech(arr1, arr2);
    cout << "Пересечение: ";
    for (int num : peresechResult) {
        cout << num << " ";
    }
    cout << endl;

    vector<int> raznostResult = raznost(arr1, arr2);
    cout << "Разность: ";
    for (int num : raznostResult) {
        cout << num << " ";
    }
    cout << endl;

    return 0;
}